#include <iostream>
#include <string>
#include "beginner_task.h"

using namespace std;

void beginner_task_1(){
	//Задание:
	/*
		Составить программу, которая будет считывать введённое пятизначное число. После чего, каждую цифру этого числа необходимо вывести в новой строке.
	*/

	//Буду проверять ввели ли число, если ввели число, то проверю, ввели ли пятизначное число.
	//Если введено пятизначное число, то буду каждый разряд выводить на экран

	//Таблица ASCII http://foxtools.ru/ASCII#1251

	setlocale(LC_CTYPE,"Russian");

	string stringNumber; //Строка для ввод текста
	std::cout << "Введите целое пятизначное число: ";
	getline (cin, stringNumber); //Принимаем ввод с клавиатуры
	
	bool ThisIsNumber = true;
	int Number = 0; // ввыеденое число
	for(int i = 0; i < stringNumber.size(); i++){
		if((int) stringNumber[i] < 48 || (int) stringNumber[i] > 57) ThisIsNumber = false;
		Number = Number * 10 + ((int) stringNumber[i] - 48);
	}

	if(ThisIsNumber){
		if (Number >= 10000 && Number <= 99999){
			//Вывод числав на экран
			for(int i = 0; i < 5; i++){
				std::cout << (i+1) << " цифра равна " << (Number/(int)(pow(10.0f, 4-i)))%10 << std::endl;
			}
		}
		else{
			std::cout << "Вы ввели не пятизначное число!\n";
		}
	}
	else std::cout << "Вы ввели не число!\n";
};

void beginner_task_2(){
	/*
		Задание:
		Запрограммировать следующее выражение: (а + b — f / а) + f * a * a — (a + b) Числа а, b, f вводятся с клавиатуры. 
		Организовать пользовательский интерфейс, таким образом, чтобы было понятно, в каком порядке должны вводиться числа.
	*/

	setlocale(LC_CTYPE,"Russian");

	std::cout << "Введите цифры a, b, f:\n";
	std::cout << "a = ";
	int a;
	std::cin >> a;
	std::cout << "b = ";
	int b;
	std::cin >> b;
	std::cout << "f = ";
	int f;
	std::cin >> f;
	std::cout << "Вычисляем по формуле: (а + b — f / а) + f * a * a — (a + b). \n";
	std::cout << "Ответ = ";
	std::cout << ((a + b - f / a) + f * a * a - (a + b)) << std::endl;
}

void beginner_task_3(){
	/*
		Задание:
		Напишите программу, которая позволяет пользователю ввести в консоли латинскую букву нижнего регистра,  переводит её в верхний регистр и результат выводит в консоль. 
	*/
	//Усложню задачу. 
	//Большие поменяются на маленькие.

	setlocale(LC_CTYPE,"Russian");

	string MyString; //Строка для ввода текста
	std::cout << "Введите текст:\n";
	getline (cin, MyString); //Принимаем ввод с клавиатуры

	for(int i = 0; i < MyString.size(); i++){
		if((int) MyString[i] >= 65 && (int) MyString[i] <= 90) MyString[i] += (int) 32;
		else if((int) MyString[i] >= 97 && (int) MyString[i] <= 122) MyString[i] -= (int) 32;
	}
	std::cout << "Смена регистра:\n";
	std::cout << MyString << std::endl;
}

void beginner_task_4(){
	/*
		Задание:
		Программа должна переводить число, введенное с клавиатуры в метрах, в километры.
	*/
	setlocale(LC_CTYPE,"Russian");
	double a;
	std::cout << "Перевод числа из метров в километры\n";
    std::cout << "Введите количество метров: ";
    std::cin >> a;

	if(a < 1) std::cout << a << " метрa будет " << a / 1000 << " километра." << std::endl;
	else if( a == 1) std::cout << a << " метр будет " << a / 1000 << " километра." << std::endl;
	else if( a > 1) std::cout << a << " метр/а/ов будет " << a / 1000 << " километр/а/ов." << std::endl;
}

void beginner_task_5(){
	/*
		Задание:
		Составьте программу, которая напечатает рисунок, используя символы из таблицы ASCII (см. Рисунок 1).
		Преобразовать код символа в символ типа char можно, методом преобразования целого значения в символьное.
		// пример преобразования ASCII кода 187 в соответствующий символ
		char(187)
		Используя оператор вывода cout и подобрав нужный символ, можно достичь такого же результата, как на рисунке 1.
	*/
	//Задание слишком странное
	//╔╦╦╦╦╦╦╗
	//╚╩╩╩╩╩╩╝
	//Решение взято из комментариев 
	//Код написал Павел Становский
	std::cout << char(201) << char(203) << char(203) << char(203) << char(203) << char(203) << char(203) << char(187) << '\n' 
		      << char(200) << char(202) << char(202) << char(202) << char(202) << char(202) << char(202) << char(188) << std::endl;

}

void beginner_task_6(){
	/*
		Задание:
		Программа должна нарисовать домик, как показано на рисунке 1. Строительным материалом являются: символы слэша (прямой /, обратный , вертикальный |), знак минуса, символ подчёркивания.
		Используйте управляющие символы новой строки и табуляции. Для решения этой задачи вам могут понадобятся знания об использовании управляющих символов в С++, которые вы можете получить, прочитав у нас на сайте статью.
	*/
	//Решение взято из решения на этом же сайте 

	// определяем в массиве рисуемый объект
	int dom [8][10]={    {0,0,0,0,1,2,0,0,0,0},
						 {0,0,0,1,0,0,2,0,0,0},
						 {0,0,1,0,0,0,0,2,0,0},
						 {0,1,3,3,3,3,3,3,2,0},
						 {1,0,4,0,0,0,0,4,0,2},
						 {0,0,4,0,0,0,0,4,0,0},
						 {0,0,4,0,0,0,0,4,0,0},
						 {0,0,4,5,5,5,5,4,0,0},
					};
	char symbol [6]={' ','/','\\','-','|','_'}; // массив символов рисования
	// рисуем объект
	for(int i=0; i<8; i++) //цикл по строкам
	{
		for(int j=0; j<10; j++) //цикл по столбцам
		{
			switch(dom[i][j])
			{
				case 0: std::cout << symbol[0]; break;
				case 1: std::cout << symbol[1]; break;
				case 2: std::cout << symbol[2]; break;
				case 3: std::cout << symbol[3]; break;
				case 4: std::cout << symbol[4]; break;
				case 5: std::cout << symbol[5]; break;
			}
		}
		std::cout << std::endl;
	}
}

void beginner_task_7(){
	/*
		Задание:
		Используя один оператор вывода cout, программа должна напечатать прямоугольный треугольник из символов знака плюс + (см. Рисунок 1).
	*/
	for(int i = 1; i < 8; i++){
		for(int j = 0; j < i; j++){
			std::cout << "*";
		}
		std::cout << std::endl;
	}
}

void beginner_task_8(){
	/*
		Задание:
		Напишите программу, запрашивающую имя, фамилия, отчество и номер группы студента и выводящую введённые данные в следующем виде:
		   ********************************
		   * Лабораторная работа № 1      *
		   * Выполнил(а): ст. гр. ЗИ-123  *
		   * Иванов Андрей Петрович       *
		   ******************************** 
		Необходимо, чтобы программа сама определяла нужную длину рамки. Сама же длина рамки зависит от длины наибольшей строки внутри рамки. 
		Используя циклы for легко можно выровнять стороны рамки.
	*/

}
